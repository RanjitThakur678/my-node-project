name: Release Workflow

on:
  workflow_dispatch:
  push:
    # tags:
    #   - 'v*'
    branches:
      - main


permissions:
  contents: write
  pull-requests: read

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build package
        run: |
          npm install
          npm pack

          
          
      # - name: Get tag name from ref
      #   shell: bash
      #   run: echo "tag=${{ github.ref }}" >> $GITHUB_OUTPUT
      #   id: get_tag

      # - name: Create tag in public repository
      #   run: |
      #     cd ${{github.workspace}}
      #     git tag ${{ steps.get_tag.outputs.tag }}
      #     git push --tags --porcelain

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SERVICE_PAT }}  # Use the PAT_TOKEN secret
        with:
          tag_name: "${{ github.run_number }}"
          release_name: "Release ${{ github.run_number }}"
          body: |
            This is the first release of my Node.js project.

      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.SERVICE_PAT }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./my-node-project-1.0.0.tgz  # Update with correct file path
      #     asset_name: my-node-project-1.0.0.tgz    # Update with correct file name
      #     asset_content_type: application/x-gzip

      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.SERVICE_PAT }}  # Use the PAT_TOKEN secret
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./your-package.tgz
      #     asset_name: your-package.tgz
      #     asset_content_type: application/x-gzip
